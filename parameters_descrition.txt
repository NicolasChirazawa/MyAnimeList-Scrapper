Explicação para utilização dos parâmetros do arquivo ('./app/parameters.js'):

一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一

1°: Filtros Padrões

Caso queira consultar a documentação oficial da API do Anilist, segue o link: 
(https://studio.apollographql.com/sandbox/explorer?endpoint=https%3A%2F%2Fgraphql.anilist.co&explorerURLState=N4IgJg9gxgrgtgUwHYBcQC4QEcYIE4CeABABQAkAlmOkQJKoCURwRAxEQCIIBmFSCRAO4ALClGFEAbgEM8FaQCMANggDOQikqVEFAmKoRgifIimECc%2BYiSoMAOnjtIiRALKH5pKjUpgANKYEAA4INACCAHK0rgCiTCzs9AZ4KEQQMHhSsvLKasaoEKbmRJaERLIA5vDIKOo2YEwkKMGhRJHRMcbqwrJgALRQEGCG%2BUUWuIT2js4uxmAOTrOmFCgqzAszS3gQcNIAVhQbSy7IFUoUqsJHx0jSKBSSCNcuAL7Xb9MvIH4gMnKKKlUGBAwGudhAVHBNAAjABWaEAJlhGy%2BLyAA)

|一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一|
| Exemplos: 'averageScore_greater: [false, 'Int']' / 'averageScore_greater: [8.00, 'Int']'  |
|                                                                                           |
| 1° Campo: 'false' = não será usado / valor = será usado;                                  |
| 2° Campo: A 'tipagem' do mesmo no 'GraphQL' traz como o campo funciona;                   |
|一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一|
• averageScore_greater | Encontra animês com notas superiores àquela média;

• averageScore_lesser | Encontra animês com notas inferiores àquela média;

• episode | Quantidade de episódios daquela obra;

• genre_in | Disponibilidade para usar uma lista de gêneros para descrever as obras que busca;

• popularity_greater | Encontra animês com popularidade superior ao valor colocado;

• popularity_lesser | Encontra animês com popularidade inferior ao valor colocado;

• search | Plotação do nome da obra na estrutura do site do MAL em inglês, como por exemplo: 'Spy x Family Season 3' (https://myanimelist.net/anime/59027/Spy_x_Family_Season_3);

• season | A temporada que saiu, aceita os seguintes formatos: 'FALL', 'SUMMER', 'SPRING', 'WINTER';

• seasonYear | Ano da temporada que foi lançado;

• sort | Mostra as possíveis ordenações que podem ser usadas: ID, ID_DESC, TITLE_ROMAJI, TITLE_ROMAJI_DESC, TITLE_ENGLISH, TITLE_ENGLISH_DESC, TITLE_NATIVE, TITLE_NATIVE_DESC, TYPE, TYPE_DESC, FORMAT, FORMAT_DESC, START_DATE, START_DATE_DESC, END_DATE, END_DATE_DESC, SCORE, SCORE_DESC,, POPULARITY, POPULARITY_DESC, TRENDING, TRENDING_DESC, EPISODES, EPISODES_DESC, DURATION, DURATION_DESC, STATUS, STATUS_DESC, CHAPTERS, CHAPTERS_DESC, VOLUMES, VOLUMES_DESC, UPDATED_AT, UPDATED_AT_DESC, SEARCH_MATCH, FAVOURITES, FAVOURITES_DESC;

• source | Os seguintes formatos são aceitos: ORIGINAL, MANGA, LIGHT_NOVEL, VISUAL_NOVEL, VIDEO_GAME, OTHER, NOVEL, DOUJINSHI, ANIME, WEB_NOVEL, LIVE_ACTION, GAME, COMIC, MULTIMEDIA_PROJECT, PICTURE_BOOK;

• startDate_greater | Encontra animês com data de início superior a colocada;

• startDate_lesser | Encontra animês com data de início inferior a colocada;

一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一

2°: Filtros Especiais

• strict_search | Parâmetro para definir se vai buscar um ou demais animês; 

• top | Parâmetro que delimita a quantidade de resultados que serão devolvidos; 

一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一

3°: Gerar Excel

• is_generating_excel | Vai gerar um documento 'excel' com os dados extraídos na pasta raiz do projeto;

一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一一

4°: Utilização de Proxy

useProxy  | Vai verificar se vai ou não ser utilizado 'proxy' em suas requisições;
proxyList | Para informar a lista de 'proxies', é necessário criar um '.env' com as regras descritas no comentário do '.env_example';